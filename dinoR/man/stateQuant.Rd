% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stateQuant.R
\name{stateQuant}
\alias{stateQuant}
\title{stateQuant}
\usage{
stateQuant(NomeMatrix, nr = 2)
}
\arguments{
\item{NomeMatrix}{A tibble where each row corresponds to a sample ROI combination,
which should contain the following columns:
nFragsAnalyzed = the number fragments (read pairs) that was available
names = the names of the ROIs that were analyzed
SampleName = the names of the samples that were analzyed
GCH_DataMatrix = for every combination of ROI and sample, a matrix where the columns
correspond to genomic positions from start to end of the ROI and the rows to fragments.
1 = protected from GpC methylation. 0 = not protected from GpC methylation.}

\item{nr}{Integer used as a cutoff to filter sample ROI combinations that have less than
(\code{nr}) fragments analyzed (nFragsAnalyzed column).}
}
\value{
A tibble with a row for each sample - ROI combination, and the number of fragments in each footprint category.
TF = transcription factor footprint
open = open chromatin footprint
upNuc = upstream nucleosome footprint
downNuc = downstream nucleosome footprint
Nuc = other nucleosome footprints
no Data = fragments where no clear footprint could be assigned due to lack of data (GpCs) in one of the windows
}
\description{
Count the number of reads in each NOMe state.
}
\details{
Selects 3 windows (-50:-25, -8:8, 25:50) around the center of the provided region of interest (ROI) and calculates the average GpC
methylation protection for a given fragment across all GpCs in each window.
If it is above 0.5 the window is deemed protected, below 0.5, unprotected Depending on the protection pattern
in all windows, a read is put into one of 5 footprint categories: TF bound (0 - 1 - 0), open chromatin (0 - 0 - 0),
upstream nucleosome (1 - 1 - 0), other nucleosome (1 - 1 - 1, 1 - 0 - 0, 0 - 0 - 1, 1 - 0 - 1), and downstream nucleosome (0 - 1 - 1).
}
\examples{
library(tibble)
NomeMatrix <- tibble(SampleName = c(rep("WT",10),rep("KO",10)),
names=rep(paste0("ROI",1:10),2),nFragsAnalyzed=rep(20,20),
GCH_DataMatrix=rep(list(matrix(sample(c(0,1),size=150*20,
replace=TRUE),ncol=150,nrow=20)),20))
stateQuant(NomeMatrix)

}
